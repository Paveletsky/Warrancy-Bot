<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="css/all.css" rel="stylesheet" />
    <title>Online Contract</title>
</head>

<body>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            margin: 0;
            background-color: #f0f4f8;
        }

        html {
            position: relative;
            scroll-behavior: smooth;
        }

        ::-webkit-scrollbar {
            width: 7px;
        }

        ::-webkit-scrollbar-track {
            background: rgb(201, 201, 201);
            opacity: 0.1;
            border-radius: 0px;
        }

        ::-webkit-scrollbar-thumb {
            background: #3856c2;
            border-radius: 0px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #1d3075;
        }

        .container {
            text-align: center;
            width: 80%;
            max-width: 900px;
            background: #ffffff00;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        .pdf-viewer {
            width: 100%;
            max-width: 100%;
            height: auto;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .signature-panel {
            position: relative;
        }

        .signature-canvas {
            border: 2px solid #e0e0e0;
            border-radius: 60px;
            background-color: #fff;
            width: 50%;
            height: 220px;
            cursor: crosshair;
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        @media (max-width: 768px) {
            .signature-canvas {
                width: 100%;
            }
        }

        .signature-panel button {
            background-color: #25a434;
            border: none;
            color: white;
            margin: 5px;
            padding: 12px 24px;
            font-size: 16px;
            border-radius: 15px;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s;
        }

        .signature-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -130%);
            font-size: 20px;
            color: rgba(0, 0, 0, 0.5);
            pointer-events: none;
        }


        .signature-panel button:hover {
            background-color: #1a8527;
            transform: scale(1.05);
        }

        .signature-panel #clearSignature {
            background-color: #8a8a8a;
        }

        .signature-panel #clearSignature:hover {
            background-color: #686868;
            transform: scale(1.05);
        }

        .signature-panel button:active {
            transform: scale(0.95);
        }

        .signature-panel {
            position: relative;
            transition: opacity 1s ease-in-out;
        }

        .signature-panel.hidden {
            opacity: 0;
            display: none;
        }

        .ready-text {
            font-size: 36px;
            color: #0a972b;
            font-weight: 600;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.4s ease-in-out;
        }

        .ready-text.visible {
            opacity: 1;
            visibility: visible;
        }
    </style>

    <div class="container">
        <img id="pdfViewer" class="pdf-viewer" src="<%= filePath %>" type="application/png">
        <div id="sig-panel" class="signature-panel">
            <canvas id="signatureCanvas" class="signature-canvas"></canvas>
            <div class="signature-text">Draw your signature</div>
            <div>
                <button id="clearSignature">Clear</button>
                <button id="saveSignature">Confirm</button>
            </div>
        </div>
        <div id="readyText" class="ready-text">Done ✓</div>
    </div>
</body>

<script>
    const filename = "<%= filename %>"
    let f = "<%= filePath %>"
    console.log(f)

    const canvas = document.getElementById('signatureCanvas');
    const ctx = canvas.getContext('2d');
    const signatureText = document.querySelector('.signature-text');
    let drawing = false;

    canvas.width = canvas.clientWidth;
    canvas.height = canvas.clientHeight;

    function startDrawing(e) {
        e.preventDefault();
        drawing = true;
        signatureText.style.display = 'none';
        ctx.beginPath();
        const [x, y] = getCoordinates(e);
        ctx.moveTo(x, y);
    }

    function draw(e) {
        if (!drawing) return;
        e.preventDefault();
        const [x, y] = getCoordinates(e);
        ctx.lineTo(x, y);
        ctx.stroke();
    }

    function stopDrawing() {
        if (!drawing) return;
        drawing = false;
        ctx.closePath();
    }

    function getCoordinates(e) {
        const rect = canvas.getBoundingClientRect();
        const scaleX = canvas.width / rect.width;
        const scaleY = canvas.height / rect.height;
        let x, y;
        if (e.touches) {
            x = e.touches[0].clientX - rect.left;
            y = e.touches[0].clientY - rect.top;
        } else {
            x = e.clientX - rect.left;
            y = e.clientY - rect.top;
        }
        return [x * scaleX, y * scaleY];
    }

    function clearSignature() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        signatureText.style.display = 'block';
    }
    
    async function saveSignature() {
        const img = document.getElementById('pdfViewer');
        const signatureData = canvas.toDataURL('image/png');

        const baseImage = await loadImage(img.src);
        const signatureImage = await loadImage(signatureData);

        const finalCanvas = document.createElement('canvas');
        finalCanvas.width = baseImage.width;
        finalCanvas.height = baseImage.height;
        const finalCtx = finalCanvas.getContext('2d');

        finalCtx.drawImage(baseImage, 0, 0);
        finalCtx.drawImage(signatureImage, 1200, 2297); // Adjust the coordinates as needed

        const finalImageData = finalCanvas.toDataURL('image/png');
        img.src = finalImageData;

        // Отправляем Data URL как строку на сервер
        fetch('/api/save-image', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ imageData: finalImageData, filename: `${filename}.png` })
        })
        .then(response => response.json())
        .then(result => {
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    function loadImage(src) {
        return new Promise((resolve) => {
            const img = new Image();
            img.onload = () => resolve(img);
            img.src = src;
        });
    }

    canvas.addEventListener('mousedown', startDrawing);
    canvas.addEventListener('mousemove', draw);
    canvas.addEventListener('mouseup', stopDrawing);
    canvas.addEventListener('mouseleave', stopDrawing);

    canvas.addEventListener('touchstart', startDrawing);
    canvas.addEventListener('touchmove', draw);
    canvas.addEventListener('touchend', stopDrawing);
    canvas.addEventListener('touchcancel', stopDrawing);

    document.getElementById('clearSignature').addEventListener('click', clearSignature);
    document.getElementById('saveSignature').addEventListener('click', saveSignature);

    document.addEventListener("DOMContentLoaded", function() {
        const saveButton = document.getElementById("saveSignature");
        const signaturePanel = document.getElementById('sig-panel');
        const readyText = document.getElementById("readyText");

        const image = document.getElementById("pdfViewer")
        image.src = "<%= filePath %>"

        const c = "<%= confirmed %>"
        if (c == "true") {
            signaturePanel.classList.add("hidden");
            readyText.classList.add("visible");
            return;
        }

        saveButton.addEventListener("click", function() {
            signaturePanel.classList.add("hidden");
            readyText.classList.add("visible");

            fetch('/api/confirm', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({id: filename})
            })
            .then(response => response.json())
            .then(result => {
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    });
</script></html>
